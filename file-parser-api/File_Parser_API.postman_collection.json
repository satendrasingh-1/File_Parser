{
  "info": {
    "name": "File Parser CRUD API",
    "description": "Complete API collection for testing file upload, parsing, and management endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:8000",
      "type": "string"
    },
    {
      "key": "file_id",
      "value": "your-file-id-here",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/",
          "host": ["{{base_url}}"],
          "path": [""]
        },
        "description": "Check API health and version information"
      },
      "response": []
    },
    {
      "name": "Upload File",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "file",
              "type": "file",
              "src": [],
              "description": "Select a CSV file to upload"
            }
          ]
        },
        "url": {
          "raw": "{{base_url}}/files",
          "host": ["{{base_url}}"],
          "path": ["files"]
        },
        "description": "Upload a CSV file for processing. The response will include a file_id that you can use for other operations."
      },
      "response": []
    },
    {
      "name": "Get Progress",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/files/{{file_id}}/progress",
          "host": ["{{base_url}}"],
          "path": ["files", "{{file_id}}", "progress"]
        },
        "description": "Get real-time processing progress for a specific file. Update the file_id variable with the ID from the upload response."
      },
      "response": []
    },
    {
      "name": "Get File Content",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/files/{{file_id}}",
          "host": ["{{base_url}}"],
          "path": ["files", "{{file_id}}"]
        },
        "description": "Get parsed content of a processed file. Only works when file status is 'ready'."
      },
      "response": []
    },
    {
      "name": "List Files",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/files?limit=10&offset=0",
          "host": ["{{base_url}}"],
          "path": ["files"],
          "query": [
            {
              "key": "limit",
              "value": "10",
              "description": "Maximum number of files to return (default: 50, max: 100)"
            },
            {
              "key": "offset",
              "value": "0",
              "description": "Number of files to skip (default: 0)"
            }
          ]
        },
        "description": "List all uploaded files with pagination support"
      },
      "response": []
    },
    {
      "name": "Delete File",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{base_url}}/files/{{file_id}}",
          "host": ["{{base_url}}"],
          "path": ["files", "{{file_id}}"]
        },
        "description": "Delete a file and its associated data. Update the file_id variable with the ID of the file you want to delete."
      },
      "response": []
    }
  ]
}
